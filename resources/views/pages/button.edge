@layout('layouts/main')
@set('title', 'Button | Aprhodite')

@section('body')
  @include('partials/header')

  @component('components/container', { parentClasses: 'py-8'})
    <div class="mb-8">
      <h1 class="text-3xl font-bold text-gray-800 md:text-4xl">Button</h1>
      <h2 class="text-gray-6">
        Button component
      </h2>

      <p class="text-gray-6 mt-4">
        You can also pass <code>{ component: 'a', href: '/' }</code> to change it to a anchor.
      </p>

      <p class="text-gray-6">
        To add icons to it use you can pass <code>{ leftIcon: 'heroicons:power' }</code> or <code>{ rightIcon: 'heroicons:power' }</code>
      </p>
    </div>

    <div>
      <div class="flex flex-col md:flex-row w-full border border-gray-3 ">
        <div class="flex flex-1 p-4 items-center justify-center">
          @!button({ label: 'Settings', id: 'exampleButton' })
        </div>
        <form id="form" class="w-full border-l border-gray-3 flex flex-col gap-5 md:w-[250px] px-2 py-4">
          <div class="flex flex-col self-start gap-2 w-full">
            <p>Variant:</p>

            @!form.select({ name: 'variant', selected: 'filled', id: 'variant', items: [
              { label: 'Filled', value: 'filled' },
              { label: 'Light', value: 'light' },
              { label: 'Outline', value: 'outline' },
              { label: 'Subtle', value: 'subtle' },
            ]})
          </div>

          <div class="flex flex-col gap-2">
            <p>Color:</p>
            @include('partials/ColorPicker')
          </div>

          <div class="flex flex-col self-start gap-2">
            <p>Size:</p>
            <div class="flex flex-col">
              @!form.radio({ name: 'size', checked: 'md', items: [
                { label: 'sm', value: 'sm' },
                { label: 'md', value: 'md' },
                { label: 'lg', value: 'lg' },
                { label: 'xl', value: 'xl' },
              ]})
            </div>
          </div>

          <div class="flex flex-col self-start gap-2">
            <p>Radius:</p>
            <div class="flex flex-col">
              @!form.radio({ name: 'radius', checked: 'md', items: [
                { label: 'none', value: 'none' },
                { label: 'sm', value: 'sm' },
                { label: 'md', value: 'md' },
                { label: 'lg', value: 'lg' },
                { label: 'full', value: 'full' },
              ]})
            </div>
          </div>

          <label for="disabled" class="flex self-start items-center gap-2 select-none">
            <input type="checkbox" name="disabled" id="disabled">
            Disabled
          </label>
        </form>
      </div>
      <div class="border p-4 border-gray-3 border-t-0 bg-gray-1 flex flex-col">
        <code id="codeSample">@a.button({ label: 'Settings' })</code>
      </div>
    </div>

    <script>
      var btn = document.querySelector('#exampleButton')
      var codeSample = document.querySelector('#codeSample')

      var form = document.querySelector('#form')
      var variantSelect = document.querySelector('#variant')
      var disabledCheckbox = document.querySelector('#disabled')

      form.addEventListener('change', () => {
        const variant = variantSelect.value
        const disabled = disabledCheckbox.checked
        const color = document.querySelector('input[name="color"]:checked').value
        const size = document.querySelector('input[name="size"]:checked').value
        const radius = document.querySelector('input[name="radius"]:checked').value

        btn.className = 'btn'
        btn.disabled = false

        btn.classList.add(`btn-${variant}`)
        btn.classList.add(`btn-${color}`)
        btn.classList.add(`btn-size-${size}`)
        btn.classList.add(`btn-rounded-${radius}`)

        const modifiers = ["label: 'Settings'"]

        if(variant !== 'filled') modifiers.push(`variant: '${variant}'`)
        if(color !== 'blue') modifiers.push(`color: '${color}'`)
        if(size !== 'md') modifiers.push(`size: '${size}'`)
        if(radius !== 'md') modifiers.push(`rounded: '${radius}'`)
        if(disabled) {
          modifiers.push(`disabled: true`)
          btn.classList.add('btn-disabled')
          btn.disabled = true
        }

        codeSample.innerHTML = `@a.button({ ${modifiers.join(', ')} })`
      })
    </script>
  @end
@end

